@page "/genres/delete"
@using Microsoft.EntityFrameworkCore
@using TRUMPet.Domain
@inject IDbContextFactory<TRUMPet.Data.TRUMPetContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Genre</h2>
    <hr />
    @if (genre is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@genre.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@genre.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateAdded</dt>
            <dd class="col-sm-10">@genre.DateAdded</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Artistname</dt>
            <dd class="col-sm-10">@genre.Artistname</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SongName</dt>
            <dd class="col-sm-10">@genre.SongName</dd>
        </dl>
        <EditForm method="post" Model="genre" OnValidSubmit="DeleteGenre" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(genre is null)">Delete</button> |
            <a href="/genres">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Genre? genre;

    [SupplyParameterFromQuery]
    private int GenreID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        genre = await context.Genre.FirstOrDefaultAsync(m => m.GenreID == GenreID);

        if (genre is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteGenre()
    {
        using var context = DbFactory.CreateDbContext();
        context.Genre.Remove(genre!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/genres");
    }
}
